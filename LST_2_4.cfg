% Configuration file for a LST in Prod-6 (CTA-PROD6 setup).

#ifndef TYPE_CLASS
#  define TYPE_CLASS large-size telescope
#endif
#ifndef OPTICS_CLASS
#  define OPTICS_CLASS 1
#endif
#ifndef TRIGGER_CLASS
#  define TRIGGER_CLASS 2
#endif

#ifndef PROJECT
# define PROJECT CTA
#endif
#ifndef PRODVERS
# define PRODVERS PROD6
# define PRODVERS_TEXT Prod-6
#endif

#define LST_CONFIG 1

#if undefined(CTA_NORTH) && undefined(CTA_SOUTH)
# if defined(LST1) || defined(LST2) || defined(LST3) || defined(LST4)
#  defined CTA_NORTH 1
# else
echo 
echo --------------------------------------------------------------------------
echo Attempt to configure a generic LST without decision on CTA North or South.
echo This configuration might fail to work.
echo --------------------------------------------------------------------------
echo 
# endif
#endif

#include <$(PROJECT)-$(PRODVERS)-common.cfg>
#include <$(PROJECT)-$(PRODVERS)-site.cfg>
#include <$(PROJECT)-$(PRODVERS)-pmt.cfg>

% The remainder is specific for LST.

% ------------------------- Optical parameters --------------------------

optics_config_name = LST
optics_config_version = 2022-07-01 ($(PRODVERS_TEXT))  % Latest change: tuning thresholds for prod-6
#define TELIDNAME LST (unspecified)

parabolic_dish      = 1        % Mirrors are on a parabolic dish.
focal_length        = 2800     % Nominal focal length [cm]. Effective focal length is 2930.6 cm based on optical ray-tracing.
effective_focal_length = 2930.565 % Only to be used for image analysis. No effect in simulation itself.
mirror_focal_length = 0        % Adapted automatically unless specified in file (idea is to have three groups or sort)
% mirror_focal_length = 2862   % If using a single fixed focal length for a genuine parabolic dish [cm]
dish_shape_length   = 2800     % Same as nominal focal length for strictly parabolic design

#ifdef PERFECT_DISH

  % If all mirrors are just perfect:
  mirror_list         = mirror_CTA-LST-v20141201-198.dat   % 388.38 m^2 projected
  random_focal_length            = 0.,0

  mirror_reflection_random_angle = 0.0
  mirror_align_random_distance   = 0.0
  mirror_align_random_horizontal = 0.0,0.,0.,0.
  mirror_align_random_vertical   = 0.0,0.,0.,0.

#else

  % Better try to use a realistic configuration:
# ifdef LST_MIRRORS_GROUPED
   mirror_list         = mirror_CTA-LST-flen_grouped.dat   % Three groups of focal lengths (negative flen values! random flen still applies)
   random_focal_length =  0,20    % Assume flat distribution with a maximum of +-20 cm deviation from the given focal length
%  Alternative for older sim_telarray versions
%   random_focal_length = 11.5     % = 40/sqrt(12.) Gaussian distribution of same r.m.s.
    optics_config_variant = LST mirrors with grouped focal lengths
# else
#  if defined(CTA_SOUTH) || defined(LSTS)
    echo Using mirror list for CTA-South LSTs.
    mirror_list         = mirror_CTA-S-LST_v2020-04-07.dat   % Based on CTA-North LST 2-4 average of individual facet focal lengths.
    optics_config_variant = LSTS-xx
#   define TELIDNAME LSTS-xx
#   ifndef LSTS
#    define LSTS 1
#   endif
#  elif ( defined(LST1_PROTOTYPE) || ( defined(CTA_NORTH) && TELESCOPE == 1 && undefined(LST2) && undefined(LST3) && undefined(LST4) ) || defined(LST1) )
    echo Using mirror list for CTA-North LST-1.
    mirror_list         = mirror_CTA-N-LST1_v2019-03-31.dat  % Individual focal lengths
    optics_config_variant = LSTN-01
#   define TELIDNAME LSTN-01
#   ifndef LST1
#    define LST1 1
#   endif
#   ifndef LST1_PROTOTYPE
#    define LST1_PROTOTYPE 1
#   endif
#  elif ( ( defined(CTA_NORTH) && TELESCOPE == 2 ) || defined(LST2) )
    echo Using mirror list for CTA-North LST-2.
    mirror_list         = mirror_CTA-N-LST2_v2020-04-07.dat  % Individual focal lengths
    optics_config_variant = LSTN-02
#   define TELIDNAME LSTN-02
#   ifndef LST2
#    define LST2 1
#   endif
#  elif ( ( defined(CTA_NORTH) && TELESCOPE == 3 ) || defined(LST3) )
    echo Using mirror list for CTA-North LST-3.
    mirror_list         = mirror_CTA-N-LST3_v2020-04-07.dat  % Individual focal lengths
    optics_config_variant = LSTN-03
#   define TELIDNAME LSTN-03
#   ifndef LST3
#    define LST3 1
#   endif
#  elif ( ( defined(CTA_NORTH) && TELESCOPE == 4 ) || defined(LST4) )
    echo Using mirror list for CTA-North LST-4.
    mirror_list         = mirror_CTA-N-LST4_v2020-04-07.dat  % Individual focal lengths
    optics_config_variant = LSTN-04
#   define TELIDNAME LSTN-04
#   ifndef LST4
#    define LST4 1
#   endif
#  else
    echo Using mirror list for unknown LST.
    mirror_list         = mirror_CTA-S-LST_v2020-04-07.dat   % Based on CTA-North LST 2-4 average of individual facet focal lengths.
#  endif
   random_focal_length =  0,0                               % without extra randomness.
# endif

%  mirror_reflection_random_angle = 0.0075 % [deg] based on 2-f measurements of single mirror segments.

  mirror_align_random_distance    = 0.0 % cm

% LST-1 cumulative PSF distribution reproduced with worse mirror alignment than initially assumed.
% The tail in the distribution could be due to very poorly aligned mirrors but we only have
% the second random reflection angle component to describe the PSF tail (12.5% with 0.037 deg.).
%  mirror_reflection_random_angle = 0.0075,0.125,0.037 % [deg] with tail in distribution needed to match telescope cumulative PSF distribution
%  mirror_align_random_horizontal = 0.0039,28.,0.0,0.0 % no zenith dependence due to active mirror control
%  mirror_align_random_vertical   = 0.0039,28.,0.0,0.0 % no zenith dependence due to active mirror control

% Update 2022-06-15 for better match with later LST-1 measurements.
  mirror_reflection_random_angle = 0.0075,0.22,0.0220 % [deg] with tail in distribution needed to match telescope cumulative PSF distribution
  mirror_align_random_horizontal = 0.0019,28.,0.,0.   % no zenith dependence due to active mirror control
  mirror_align_random_vertical   = 0.0019,28.,0.,0.   % no zenith dependence due to active mirror control

#endif

mirror_offset       = 93.25    % [cm] behind/below axes crossing (see redmine issue 35807)
focus_offset        = 6.55     % 1./(1./2800.-1./12.e5)-2800. (focusing at 12 km distance), starlight focusing target to pixel entrance

% mirror_reflectivity = ref_SANKO_29ave.dat % Updated prod-3 reflectivity (Masaaki et. al.)
% mirror_reflectivity = ref_200_1100_180314_ver2.1a.dat % Koji Noda, 2018-03-15
% mirror_reflectivity = ref_200_1100_190211a.dat % Revised version 2019-02-18, with better absolute calibration.
% mirror_reflectivity = ref_LST_2020-04-21.dat  % Revised version received 2020-04-21.
mirror_reflectivity = ref_LST_2020-04-23.dat  % Revised version received 2020-04-23.
mirror_degraded_reflection = 0.80             % Assuming future LSTs will degrade like LST-1
% Fixme: Individual (average per telescope) reflectivity curves to come (check if degrading would still apply!)
#if defined(LST1)
  mirror_reflectivity = ref_LST1_2022_04_01.dat  % for mirror on LST-1(N) by Yusuke Suda 2022-04-01
#elif defined(LST2)
  mirror_reflectivity = ref_LST2_2022_04_01.dat  % for mirror on LST-2(N) by Yusuke Suda 2022-04-01
#elif defined(LST3)
  mirror_reflectivity = ref_LST3_2022_04_01.dat  % for mirror on LST-3(N) by Yusuke Suda 2022-04-01
#elif defined(LST4)
  mirror_reflectivity = ref_LST4_2022_04_01.dat  % for mirror on LST-4(N) by Yusuke Suda 2022-04-01
#endif

% Accuracy of the tracking and measurement of current direction.
% Pointing errors can always be mimicked at the analysis level:
telescope_random_angle         = 0.
telescope_random_error         = 0.

% -------------------------- Camera ------------------------------

camera_config_name = LSTcam
% camera_config_version = 2022-07-01 ($(PRODVERS_TEXT))

% The telescope_transmission factor corrects for the shadowing by
% elements not explicitly included in sim_telarray. 
% It is thus the ratio of the effective optical area (in projection) based on a
% detailed ray-tracing with all elements over the same area in simplified
% ray-tracing by sim_telarray.
% The original evaluation by detailed ray-tracing (K.Noda, 2013, with ROBAST)
% resulted in an un-projected non-shadowed mirror area of 369.14+-0.08 m^2, from
% which after projection 365.2+-0.1 m^2 are expected. Re-evaluation in Dec. 2017
% resulted in 365.4 m^2 projected. All on-axis.
% Evaluation with sim_telarray results in 380.37+-0.07 m^2 with the 300 cm square
% camera body and 377.71+-0.07 m^2 with the 348 cm square camera body assumption
% including the mounting frame.

camera_body_shape = 2                                                   % Square camera body, needs newer sim_telarray
camera_body_diameter = 348                                              % cm (only for shadowing, includes mounting frame)
telescope_transmission = 0.9690                                         % = 366.0/380.37 with 300 cm camera body accounted for explicitely.
mirror_degraded_reflection = 0.784                                      % the right way simulate a lower mirror reflectivity. Together with shadowing they amount for a transmission of 0.7597

camera_transmission = 1.0 % All of the transmission is now included in the camera_filter file.
camera_filter = transmission_lst_window_No7-10_ave.dat % same as No7-10_ave.dat but not percent (and with 1000 nm extrapol.)

camera_config_file = camera_CTA-LST_SiPM_Ideal_analogsum21.dat          % Camera config file for SiPM camera, specific funnels, and new geometry

#define ONLY_ANALOG_SUM 1
#define NO_MAJORITY 1
#define NO_DIGITAL_SUM 1

camera_pixels = 7987                                                    % needs to be specified explicitly

min_photons = 0                                                         % To avoid missing photons in the trigger scans (it doesn't increase too much the CPU time)

min_photoelectrons = 0                                                  % To avoid missing pe in the trigger scans (it increases largely the CPU time)

store_photoelectrons = 0                                                % Save individual photo-electrons from this minimal number

save_photons = 3                                                        % if set to 1 saves photon bunches data from corsika files
#ifdef LST_EXTREME_TRIGGER
  min_photons = 220                                                     % With fewer photons don't waste CPU time.
  min_photoelectrons = 18                                               % 50% efficiency at 60 p.e.
  store_photoelectrons = 16                                             % Save individual photo-electrons
#endif

% --------------- Placing of signals in simulated windows ---------------

% We need to shift the pulses further 'right' in the simulated time windows,
% such that the occasional early signals (at large core distance) are better covered.
photon_delay = 19    % ns

% --------------------------- Trigger -----------------------------------

% The trigger simulation is over a slightly earlier window than the ADC signals (from interval -3 to 64 in ADC frame).
disc_bins = 68  % Number of time intervals simulated for trigger.
disc_start = 3  % How many intervals the trigger simulation starts before the ADC.

% The camera config file has majority, analog sum, plus digital sum.
#ifndef NO_ANALOG_SUM
# define ANALOG_SUM 1
#endif

% Majority & analog sum input pulses:
discriminator_pulse_shape = template_3ns.txt                    % For SiPMs
discriminator_amplitude = 15.98                                  % For 1 gain, its value should be equal to fadc_amplitude

% Discriminator threshold (and corresponding multiplicity for telescope trigger):
trigger_pixels = 3             % This means actually a level of 2.5 pixels. Not used for analog sum.
discriminator_threshold = 99999

% Telescope trigger (specified even if no majority trigger is used):
default_trigger = AnalogSum
teltrig_min_time                       0.5 % ns
teltrig_min_sigsum                     7.8 % pV.s

% With a single trigger type no delay compensation between trigger types needed.
% Could be used though for systematic differences between telescope types.
trigger_delay_compensation = all: 0 


only_triggered_telescopes=1

% ------------------------------ Readout --------------------------------

% Sampling rate in MHz:
fadc_MHz = 1024 % MHz sampling rate

% Read-out of a 40 ns window (within simulated 55 ns) following the actual trigger:
fadc_bins = 75       % Number of time intervals simulated for ADC (extends by 10 ns beyond the 68 ns discriminator simulation)
fadc_sum_bins = 40   % Number of ADC time intervals actually summed up or written as trace.
fadc_sum_offset = 15  % How many intervals summation starts before telescope trigger.

fadc_pedestal = 300          % Per time slice (positive signals only: unsigned!)
% fadc_err_pedestal = 0.5      % The reported pedestal differs from what gets internal used.
% fadc_var_pedestal = 30.      % Channel-to-channel r.m.s. differences.
fadc_amplitude = 15.98                                           % The peak amplitude in a time slice for high gain and XT corrected SPE for a 500 pe dynamic range
fadc_noise = 3.82                                               % Derived from the SPE fit of SiPM parameters by Andrii Nagai

num_gains = 1                % Make it clear that we want to use two gains

fadc_max_signal = 16383      % 12-bit ADC (applies to both channels unless specified)
fadc_max_sum = 16777215      % 24-bit sum is unlimited for all practical purposes.

% ----------------------------- Analysis --------------------------------

#ifdef WITH_PULSE_ANALYSIS
% Pulse shape analysis with pulse sum around global peak
% position only for significant pixels.
pulse_analysis = -30

% Pulse analysis provides a conditional 8 ns integration at 1000 MHz sampling rate.
sum_before_peak = 3
sum_after_peak = 4

tailcut_scale = 2.6 % For built-in image cleaning (not relevant for later analysis)
#endif



% Add any changed parameters below ...

echo LST configuration adapted for Prod-6

effective_focal_length = 2923.7 % Old style (one value) for backward compatible data.
#ifdef ASYMMETRIC_FLEN
% Mean effective focal length, eflen for x proj., eflen for y proj., displacements in x/y.
  effective_focal_length = 2923.7, 2927.8, 2919.5, 0., 0. 
#endif
